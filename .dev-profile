DP_DIR=""
MAIN_OS=""

if [ "$(uname)" = "Darwin" ]; then
  DP_DIR=$(cd "$(dirname "$0")"; pwd)
  MAIN_OS="OSX"
elif [ "$(expr substr $(uname -s) 1 5)" = "Linux" ]; then
  DP_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null && pwd )"
  MAIN_OS="Linux"
fi



#--------------------------------------
#---------------Common-----------------
#--------------------------------------
alias la='ls -a'
alias ll='ls -al'
alias cl='clear'
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias ......="cd ../../../../.."



#--------------------------------------
src(){
  if [ "$MAIN_OS" = "OSX" ]; then
  . ~/.zshrc
  elif [ "$MAIN_OS" = "Linux" ]; then
  . ~/.bashrc
  fi
}



rmlock(){
  if [ "$MAIN_OS" = "Linux" ]; then
    sudo rm /var/lib/apt/lists/lock
    sudo rm /var/cache/apt/archives/lock
    sudo rm /var/lib/dpkg/loc
  fi
}

#--------------------------------------
dt(){
  cd ~/zk-scripts/dev-tools
  pull -i
  src
}


dp(){
  cd ~/zk-scripts/dev-profile
  pull
  src
}



#--------------------------------------
pull(){
  if [ "$1" = "-i" ]; then
    git stash
    git stash clear
    git pull
    chmod +x install.sh
    ./install.sh
  else
    git stash
    git stash clear
    git pull
  fi
}



#--------------------------------------
#---------------Postgresql------------------
#--------------------------------------

psql-start(){
  if [ "$MAIN_OS" = "OSX" ]; then
    brew services start postgresql
  fi
 
}



brew services start postgresql



#--------------------------------------
#---------------Redis------------------
#--------------------------------------

redis-start(){
  sudo service redis start
}

redis-stop(){
  sudo service redis stop
}

redis-restart(){
  sudo service redis restart
}

redis-status(){
  sudo service redis status
}

redis-cli-stop(){
  redis-cli shutdown
}


#--------------------------------------
#--------------MongoDB-----------------
#--------------------------------------


mongodb-start(){
  sudo service mongod start
}

mongodb-restart(){
  sudo service mongod restart
}

mongodb-stop(){
  sudo service mongod stop
}

mongodb-status(){
  sudo service mongod status
}







#--------------------------------------

kill(){
    port=$(lsof -t -i:$1)
    echo $port
    if [ ! -z "$port" ] &&  [ "$port" != "" ] ; then
        sudo kill -9 $port
    fi
}

